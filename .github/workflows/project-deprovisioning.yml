name: Project Deprovisioning

on:
  workflow_dispatch:
    inputs:
      project-name:
        description: 'Name of the project'
        required: true
      cost-center:
        description: 'Cost center'
        required: true
        default: '12345'
      subaccount-region:
        description: 'Region of the subaccounts'
        required: true
        default: 'us10'
      space-responsible:
        description: 'Email of the responsible for the CF space'
        required: true
        default: 'christian.lechner@sap.com'
env:
  PATH_TO_TFSCRIPT_BTP: 'infra/BTP'
  PATH_TO_TFSCRIPT_CF: 'infra/CloudFoundry'

jobs:
###
# DEVELOPMENT
###
  destroy_subaccount_dev:
    concurrency:
     group: dev
     cancel-in-progress: true

    name: Destroy DEV Subaccount
    runs-on: ubuntu-latest
    environment: dev
    env:
      STAGE: dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: latest

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Transfer BTP output values
        id: terraform_output_btp
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} &&  terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} output -json > output_btp.json
          echo "cf_api_url=$(jq -r '.cf_api_url.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "cf_org_id=$(jq -r '.cf_org_id.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "subaccount_url=$(jq -r '.subaccount_url.value' output_btp.json)" >> $GITHUB_OUTPUT

      - name: Init Terraform for CF
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} init  \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for CF
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export CF_USER=${{ secrets.BTP_USERNAME }}
            export CF_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_cf_space_manager=${{ github.event.inputs.space-responsible }}
            export TF_VAR_cf_space_developer=${{ github.event.inputs.space-responsible }}
            export TF_VAR_subaccount_stage=DEV
            export TF_VAR_cf_org_id=${{ steps.terraform_output_btp.outputs.cf_org_id }}
            export TF_VAR_cf_api_url=${{ steps.terraform_output_btp.outputs.cf_api_url }}
            export TF_VAR_subaccount_url=${{ steps.terraform_output_btp.outputs.subaccount_url }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace select ${{ env.STAGE }} && terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} destroy -auto-approve -no-color

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for BTP
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
            export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_globalaccount=${{ secrets.GLOBALACCOUNT }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_subaccount_region=${{ github.event.inputs.subaccount-region }}
            export TF_VAR_subaccount_stage=DEV
            export TF_VAR_beta_enabled=true
            export TF_VAR_project_costcenter=${{ github.event.inputs.cost-center }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} && terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} destroy -auto-approve -no-color

      - name: Delete Terraform workspaces
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace delete ${{ env.STAGE }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace delete ${{ env.STAGE }}

###
# TESTING
###
  destroy_subaccount_test:
    concurrency:
     group: test
     cancel-in-progress: true

    name: Destroy TEST Subaccount
    runs-on: ubuntu-latest
    environment: test
    env:
      STAGE: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: latest

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Transfer BTP output values
        id: terraform_output_btp
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} &&  terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} output -json > output_btp.json
          echo "cf_api_url=$(jq -r '.cf_api_url.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "cf_org_id=$(jq -r '.cf_org_id.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "subaccount_url=$(jq -r '.subaccount_url.value' output_btp.json)" >> $GITHUB_OUTPUT

      - name: Init Terraform for CF
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} init  \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for CF
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export CF_USER=${{ secrets.BTP_USERNAME }}
            export CF_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_cf_space_manager=${{ github.event.inputs.space-responsible }}
            export TF_VAR_cf_space_developer=${{ github.event.inputs.space-responsible }}
            export TF_VAR_subaccount_stage=TEST
            export TF_VAR_cf_org_id=${{ steps.terraform_output_btp.outputs.cf_org_id }}
            export TF_VAR_cf_api_url=${{ steps.terraform_output_btp.outputs.cf_api_url }}
            export TF_VAR_subaccount_url=${{ steps.terraform_output_btp.outputs.subaccount_url }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace select ${{ env.STAGE }} && terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} destroy -auto-approve -no-color

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for BTP
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
            export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_globalaccount=${{ secrets.GLOBALACCOUNT }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_subaccount_region=${{ github.event.inputs.subaccount-region }}
            export TF_VAR_subaccount_stage=TEST
            export TF_VAR_beta_enabled=true
            export TF_VAR_project_costcenter=${{ github.event.inputs.cost-center }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} &&  terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} destroy -auto-approve -no-color

      - name: Delete Terraform workspaces
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace delete ${{ env.STAGE }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace delete ${{ env.STAGE }}

####
## PRODUCTION
####
  destroy_subaccount_prod:
    concurrency:
     group: prod
     cancel-in-progress: true

    name: Destroy PROD Subaccount
    runs-on: ubuntu-latest
    environment: prod
    env:
      STAGE: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: latest

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Transfer BTP output values
        id: terraform_output_btp
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} &&  terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} output -json > output_btp.json
          echo "cf_api_url=$(jq -r '.cf_api_url.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "cf_org_id=$(jq -r '.cf_org_id.value' output_btp.json)" >> $GITHUB_OUTPUT
          echo "subaccount_url=$(jq -r '.subaccount_url.value' output_btp.json)" >> $GITHUB_OUTPUT

      - name: Init Terraform for CF
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} init  \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for CF
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export CF_USER=${{ secrets.BTP_USERNAME }}
            export CF_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_cf_space_manager=${{ github.event.inputs.space-responsible }}
            export TF_VAR_cf_space_developer=${{ github.event.inputs.space-responsible }}
            export TF_VAR_subaccount_stage=PROD
            export TF_VAR_cf_org_id=${{ steps.terraform_output_btp.outputs.cf_org_id }}
            export TF_VAR_cf_api_url=${{ steps.terraform_output_btp.outputs.cf_api_url }}
            export TF_VAR_subaccount_url=${{ steps.terraform_output_btp.outputs.subaccount_url }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace select ${{ env.STAGE }} && terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} destroy -auto-approve -no-color

      - name: Init Terraform for BTP
        shell: bash
        run: |
          export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
          terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} init \
             -backend-config="resource_group_name=${{ secrets.RESOURCE_GROUP_NAME }}" \
             -backend-config="storage_account_name=${{ secrets.STORAGE_ACCOUNT_NAME }}" \
             -backend-config="container_name=${{ secrets.CONTAINER_NAME }}" \
             -no-color

      - name: Terraform Destroy for BTP
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            export BTP_USERNAME=${{ secrets.BTP_USERNAME }}
            export BTP_PASSWORD=${{ secrets.BTP_PASSWORD }}
            export TF_VAR_globalaccount=${{ secrets.GLOBALACCOUNT }}
            export TF_VAR_project_name='${{ github.event.inputs.project-name }}'
            export TF_VAR_subaccount_region=${{ github.event.inputs.subaccount-region }}
            export TF_VAR_subaccount_stage=PROD
            export TF_VAR_beta_enabled=true
            export TF_VAR_project_costcenter=${{ github.event.inputs.cost-center }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace select ${{ env.STAGE }} &&  terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} destroy -auto-approve -no-color

      - name: Delete Terraform workspaces
        shell: bash
        run: |
            export ARM_ACCESS_KEY=${{ secrets.ARM_ACCESS_KEY }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_BTP }} workspace delete ${{ env.STAGE }}
            terraform -chdir=${{ env.PATH_TO_TFSCRIPT_CF }} workspace delete ${{ env.STAGE }}
